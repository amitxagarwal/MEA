parameters:
  azureSubscription: 'KMD Momentum Internal (77a2aca7-3b91-463d-9165-c6d0bb3689f9)'
  environmentNameSuffix: phoenix
  environment: Phoenix
  environmentAutoDelete: false
  instanceId: p12345
  resourceGroupLocation: westeurope
  diagnosticSeqServerUrl: https://myseq.com/
  diagnosticSeqApiKey: <secret>
  webAppServicePlanSku: B1
  webAppConfigAlwaysOn: true
  autoSwapSlots: false
  clientSecret: <secret>
  isDbRequired: 'false'
  isKeyVaultRequired: 'false'
  meaAuthorizationAudience: ""

jobs:
  - deployment: deploy_momentum_mea_${{ parameters.environmentNameSuffix }}
    pool: { vmImage: 'windows-2019' }
    environment: momentum_mea_${{ parameters.environmentNameSuffix }}
    variables:
      Environment: ${{ parameters.environment }}
      InstanceId: ${{ parameters.instanceId }}
      ResourceGroupLocation: ${{ parameters.resourceGroupLocation }}
      DiagnosticSeqServerUrl: ${{ parameters.diagnosticSeqServerUrl }}
      DiagnosticSeqApiKey: ${{ parameters.diagnosticSeqApiKey }}
      WebAppName: kmd-momentum-mea-${{ parameters.instanceId }}-webapp
      ResourceGroupName: kmd-momentum-mea-${{ parameters.instanceId }}-rg
      WebAppServicePlanSku: ${{ parameters.webAppServicePlanSku }}
      WebAppConfigAlwaysOn: ${{ parameters.webAppConfigAlwaysOn }}
      ClientSecret: ${{ parameters.clientSecret }}
      isDbRequired: ${{ parameters.isDbRequired }}
      isKeyVaultRequired: ${{ parameters.isKeyVaultRequired }}
      meaAuthorizationAudience: ${{ parameters.meaAuthorizationAudience }}

    strategy:
      runOnce:
        deploy:
          steps:
            - download: current

            - task: AzurePowerShell@4
              displayName: Deploy azure infrastructure
              inputs:
                azureSubscription: ${{ parameters.azureSubscription }}
                ScriptType: 'FilePath'
                ScriptPath: '$(Pipeline.Workspace)/deploy/deploy-infrastructure.ps1'
                ScriptArguments: -MarkForAutoDelete:("${{ parameters.environmentAutoDelete }}" -eq "true") -InstanceId '$(InstanceId)' -ResourceGroupLocation '$(ResourceGroupLocation)' -DiagnosticSeqServerUrl '$(DiagnosticSeqServerUrl)' -DiagnosticSeqApiKey '$(DiagnosticSeqApiKey)' -WebAppConfigAlwaysOn ("$(WebAppConfigAlwaysOn)" -eq "true") -WebAppServicePlanSku '$(WebAppServicePlanSku)' -ClientSecret '$(ClientSecret)' -Environment '$(Environment)' -DbRequired '$(isDbRequired)' -KeyVaultRequired '$(isKeyVaultRequired)' -MeaAuthorizationAudience $(meaAuthorizationAudience)
                azurePowerShellVersion: 'LatestVersion'
                pwsh: true

            - task: AzurePowerShell@4
              condition: and(succeeded(),eq(variables['isDbRequired'],'true'))
              displayName: Deploy Database
              inputs:
                azureSubscription: ${{ parameters.azureSubscription }}
                ScriptType: 'FilePath'
                ScriptPath: '$(Pipeline.Workspace)/deploy/deploy-database.ps1'
                ScriptArguments: -InstanceId '$(InstanceId)' -ArtifactPath '$(Pipeline.Workspace)'
                azurePowerShellVersion: 'LatestVersion'
                pwsh: true

            - task: AzurePowerShell@4
              condition: succeeded()
              displayName: Deploy webapp binaries
              inputs:
                azureSubscription: ${{ parameters.azureSubscription }}
                ScriptType: 'FilePath'
                ScriptPath: '$(Pipeline.Workspace)/deploy/deploy-webapps.ps1'
                ScriptArguments: -PublishedArtifactsPath '$(Pipeline.Workspace)/Applications' -WebAppName '$(WebAppName)' -ResourceGroupName '$(ResourceGroupName)' -AutoSwapSlots:("${{ parameters.autoSwapSlots }}" -eq "true")
                azurePowerShellVersion: 'LatestVersion'
                pwsh: true
